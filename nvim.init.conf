set number tabstop=2 softtabstop=2 shiftwidth=2 expandtab smarttab
set noswapfile
set nowrap
syntax on
set termguicolors
set background=dark

call plug#begin('~/.config/nvim/plugged')
call plug#begin('~/.vim/plugged')

" Completion Framework
Plug 'hrsh7th/nvim-cmp'

" Completion Sources
Plug 'hrsh7th/cmp-nvim-lsp'
Plug 'hrsh7th/cmp-buffer'
Plug 'hrsh7th/cmp-path'
Plug 'hrsh7th/cmp-cmdline'

" Snippets
Plug 'L3MON4D3/LuaSnip' " Snippet engine
Plug 'saadparwaiz1/cmp_luasnip' " Snippet completions

" LSP Configuration
Plug 'neovim/nvim-lspconfig'
Plug 'navarasu/onedark.nvim'

call plug#end()

lua << EOF
require('onedark').setup {
    style = 'deep'
}
require('onedark').load()
EOF


lua << EOF
local cmp = require('cmp')

cmp.setup({
  snippet = {
    expand = function(args)
      require('luasnip').lsp_expand(args.body) -- For `luasnip` users.
    end,
  },
  mapping = {
    ['<C-b>'] = cmp.mapping.scroll_docs(-4),
    ['<C-f>'] = cmp.mapping.scroll_docs(4),
    ['<C-Space>'] = cmp.mapping.complete(),
    ['<C-e>'] = cmp.mapping.abort(),
    ['<CR>'] = cmp.mapping.confirm({ select = true }), -- Accept currently selected item.
    ['<Tab>'] = cmp.mapping(function(fallback)
      if cmp.visible() then
        cmp.select_next_item()
      else
        fallback()
      end
    end, { 'i', 's' }),
    ['<S-Tab>'] = cmp.mapping(function(fallback)
      if cmp.visible() then
        cmp.select_prev_item()
      else
        fallback()
      end
    end, { 'i', 's' }),
  },
  sources = cmp.config.sources({
    { name = 'nvim_lsp' },
    { name = 'luasnip' },
  }, {
    { name = 'buffer' },
  })
})

local lspconfig = require('lspconfig')

-- Example: Configure pyright (Python LSP)
lspconfig.pyright.setup({
  capabilities = require('cmp_nvim_lsp').default_capabilities(),
})
EOF


